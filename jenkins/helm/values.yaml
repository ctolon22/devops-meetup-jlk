Master:
  # Set RunAsUser to 1000 to let Jenkins run as non-root user 'jenkins' which exists in 'jenkins/jenkins' docker image.
  # When setting RunAsUser to a different value than 0 also set FsGroup to the same value:
  RunAsUser: 1000
  FsGroup: 1000
  # For minikube, set this to NodePort, elsewhere use LoadBalancer
  # Use ClusterIP if your setup includes ingress controller
  ServiceType: ClusterIP
  
  ScriptApproval: 
    - method groovy.json.JsonSlurperClassic parseText java.lang.String
    - new groovy.json.JsonSlurperClassic

  # List of plugins to be install during Jenkins master start
  InstallPlugins:
    - blueocean:1.10.2
    - kubernetes:1.13.0
    - workflow-job:2.31
    - workflow-aggregator:2.6
    - credentials-binding:1.17
    - git:3.9.1
    - pipeline-github-lib:1.0
    - ghprb:1.39.0
    - kubernetes-credentials-provider:0.11
    - job-dsl:1.71
    - configuration-as-code:1.5
    - configuration-as-code-support:1.5

  JCasC:
    enabled: true
    ConfigScripts:
      welcome-message: |
        jenkins:
          systemMessage: |
            Jenkins loves Kubernetes.
            Can Kubernetes loves Jenkins?            
            Step by Step, this Jenkins is 100% configured and managed 'as code'.

            Config is now mostly handled by 'Jenkins Configuration as Code Plugin' (JCasC).

      demo-pipeline: |
        jobs:
          - script: >
              multibranchPipelineJob('croc-hunters') {
                branchSources {
                  github {
                    scanCredentialsId('github')
                    repoOwner('jdeiviz')
                    repository('croc-hunter')
                    buildOriginPRMerge(true)
                  }
                }
                orphanedItemStrategy {
                  discardOldItems {
                    numToKeep(1)
                  }
                }
                triggers {
                  periodic(5)
                }
              } 

Persistence:
  Enabled: false

## Install Default RBAC roles and bindings
rbac:
  install: true
  serviceAccountName: jenkins
  # Role reference
  roleRef: edit
  # Role kind (Role or ClusterRole)
  roleKind: ClusterRole
  # Role binding kind (RoleBinding or ClusterRoleBinding)
  roleBindingKind: RoleBinding

